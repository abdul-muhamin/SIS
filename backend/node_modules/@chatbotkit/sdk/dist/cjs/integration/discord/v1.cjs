"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setupDiscordIntegration = exports.deleteDiscordIntegration = exports.updateDiscordIntegration = exports.createDiscordIntegration = exports.fetchDiscordIntegration = exports.listDiscordIntegrations = void 0;
const v1_js_1 = require("../../model/v1.cjs");
function listDiscordIntegrations(client, request) {
    let url = `/api/v1/integration/discord/list`;
    const response = client.clientFetch(url, { query: request });
    return response;
}
exports.listDiscordIntegrations = listDiscordIntegrations;
async function fetchDiscordIntegration(client, discordId) {
    const url = `/api/v1/integration/discord/${discordId}/fetch`;
    const response = await client.clientFetch(url);
    return response;
}
exports.fetchDiscordIntegration = fetchDiscordIntegration;
async function createDiscordIntegration(client, request) {
    const url = `/api/v1/integration/discord/create`;
    const response = await client.clientFetch(url, {
        record: {
            ...request,
            model: request.model ? (0, v1_js_1.buildModelString)(request.model) : undefined,
        },
    });
    return response;
}
exports.createDiscordIntegration = createDiscordIntegration;
async function updateDiscordIntegration(client, discordId, request) {
    const url = `/api/v1/integration/discord/${discordId}/update`;
    const response = await client.clientFetch(url, {
        record: {
            ...request,
            model: request.model ? (0, v1_js_1.buildModelString)(request.model) : undefined,
        },
    });
    return response;
}
exports.updateDiscordIntegration = updateDiscordIntegration;
async function deleteDiscordIntegration(client, discordId) {
    const url = `/api/v1/integration/discord/${discordId}/delete`;
    const response = await client.clientFetch(url, {
        record: {},
    });
    return response;
}
exports.deleteDiscordIntegration = deleteDiscordIntegration;
async function setupDiscordIntegration(client, discordId) {
    const url = `/api/v1/integration/discord/${discordId}/setup`;
    const response = await client.clientFetch(url, {
        record: {},
    });
    return response;
}
exports.setupDiscordIntegration = setupDiscordIntegration;
