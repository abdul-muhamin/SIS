export class FileClient extends ChatBotKitClient {
    list(request?: import('./v1.cjs').FileListRequest): ResponsePromise<import('./v1.cjs').FileListResponse, import('./v1.cjs').FileListStreamType>;
    fetch(fileId: string): Promise<import('./v1.cjs').FileFetchResponse>;
    create(request: import('./v1.cjs').FileCreateRequest): Promise<import('./v1.cjs').FileCreateResponse>;
    update(fileId: string, request: import('./v1.cjs').FileUpdateRequest): Promise<import('./v1.cjs').FileUpdateResponse>;
    delete(fileId: string): Promise<import('./v1.cjs').FileDeleteResponse>;
    upload(fileId: string, request: import('./v1.cjs').FileUploadRequest): Promise<import('./v1.cjs').FileUploadResponse>;
    download(fileId: string): Promise<import('./v1.cjs').FileDownloadResponse>;
}
export default FileClient;
export type ResponsePromise<T, U> = import('../client.cjs').ResponsePromise<T, U>;
import { ChatBotKitClient } from '../client.cjs';
