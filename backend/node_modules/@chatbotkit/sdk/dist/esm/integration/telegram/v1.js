import { buildModelString } from '../../model/v1.js';
export function listTelegramIntegrations(client, request) {
    let url = `/api/v1/integration/telegram/list`;
    const response = client.clientFetch(url, { query: request });
    return response;
}
export async function fetchTelegramIntegration(client, telegramId) {
    const url = `/api/v1/integration/telegram/${telegramId}/fetch`;
    const response = await client.clientFetch(url);
    return response;
}
export async function createTelegramIntegration(client, request) {
    const url = `/api/v1/integration/telegram/create`;
    const response = await client.clientFetch(url, {
        record: {
            ...request,
            model: request.model ? buildModelString(request.model) : undefined,
        },
    });
    return response;
}
export async function updateTelegramIntegration(client, telegramId, request) {
    const url = `/api/v1/integration/telegram/${telegramId}/update`;
    const response = await client.clientFetch(url, {
        record: {
            ...request,
            model: request.model ? buildModelString(request.model) : undefined,
        },
    });
    return response;
}
export async function deleteTelegramIntegration(client, telegramId) {
    const url = `/api/v1/integration/telegram/${telegramId}/delete`;
    const response = await client.clientFetch(url, {
        record: {},
    });
    return response;
}
export async function setupTelegramIntegration(client, telegramId) {
    const url = `/api/v1/integration/telegram/${telegramId}/setup`;
    const response = await client.clientFetch(url, {
        record: {},
    });
    return response;
}
