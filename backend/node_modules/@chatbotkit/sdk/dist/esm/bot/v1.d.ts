export function listBots(client: ChatBotKitClient, request?: BotListRequest | undefined): ResponsePromise<BotListResponse, BotListStreamType>;
export function fetchBot(client: ChatBotKitClient, botId: string): Promise<BotFetchResponse>;
export function createBot(client: ChatBotKitClient, request: BotCreateRequest): Promise<BotCreateResponse>;
export function updateBot(client: ChatBotKitClient, botId: string, request: BotUpdateRequest): Promise<BotUpdateResponse>;
export function deleteBot(client: ChatBotKitClient, botId: string): Promise<BotDeleteResponse>;
export function upvoteBot(client: ChatBotKitClient, botId: string, request: BotUpvoteRequest): Promise<BotUpvoteResponse>;
export function downvoteBot(client: ChatBotKitClient, botId: string, request: BotDownvoteRequest): Promise<BotDownvoteResponse>;
export type ChatBotKitClient = import('../client.js').ChatBotKitClient;
export type ResponsePromise<T, U> = import('../client.js').ResponsePromise<T, U>;
export type BotOptions = {
    name?: string;
    description?: string;
    backstory?: string;
    model?: string;
    datasetId?: string;
    skillsetId?: string;
    visibility?: 'public' | 'private' | 'restrictedAccessChat' | 'unrestrictedAccessChat';
    meta?: Record<string, any>;
};
export type BotInstance = BotOptions & {
    id: string;
    createdAt: number;
    updatedAt: number;
};
export type BotListRequest = {
    cursor?: string;
    order?: 'desc' | 'asc';
    take?: number;
    meta?: Record<string, string>;
};
export type BotListResponse = {
    items: BotInstance[];
};
export type BotListStreamItemType = {
    type: 'item';
    data: BotInstance;
};
export type BotListStreamType = BotListStreamItemType;
export type BotFetchResponse = BotInstance & {};
export type BotCreateRequest = BotOptions & {
    model?: import('../model/v1.js').Model;
};
export type BotCreateResponse = {
    id: string;
};
export type BotUpdateRequest = BotOptions & {
    model?: import('../model/v1.js').Model;
};
export type BotUpdateResponse = {
    id: string;
};
export type BotDeleteResponse = {
    id: string;
};
export type BotUpvoteRequest = {
    value?: number;
};
export type BotUpvoteResponse = {
    id: string;
};
export type BotDownvoteRequest = {
    value?: number;
};
export type BotDownvoteResponse = {
    id: string;
};
