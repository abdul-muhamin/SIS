"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setupTelegramIntegration = exports.deleteTelegramIntegration = exports.updateTelegramIntegration = exports.createTelegramIntegration = exports.fetchTelegramIntegration = exports.listTelegramIntegrations = void 0;
const v1_js_1 = require("../../model/v1.cjs");
function listTelegramIntegrations(client, request) {
    let url = `/api/v1/integration/telegram/list`;
    const response = client.clientFetch(url, { query: request });
    return response;
}
exports.listTelegramIntegrations = listTelegramIntegrations;
async function fetchTelegramIntegration(client, telegramId) {
    const url = `/api/v1/integration/telegram/${telegramId}/fetch`;
    const response = await client.clientFetch(url);
    return response;
}
exports.fetchTelegramIntegration = fetchTelegramIntegration;
async function createTelegramIntegration(client, request) {
    const url = `/api/v1/integration/telegram/create`;
    const response = await client.clientFetch(url, {
        record: {
            ...request,
            model: request.model ? (0, v1_js_1.buildModelString)(request.model) : undefined,
        },
    });
    return response;
}
exports.createTelegramIntegration = createTelegramIntegration;
async function updateTelegramIntegration(client, telegramId, request) {
    const url = `/api/v1/integration/telegram/${telegramId}/update`;
    const response = await client.clientFetch(url, {
        record: {
            ...request,
            model: request.model ? (0, v1_js_1.buildModelString)(request.model) : undefined,
        },
    });
    return response;
}
exports.updateTelegramIntegration = updateTelegramIntegration;
async function deleteTelegramIntegration(client, telegramId) {
    const url = `/api/v1/integration/telegram/${telegramId}/delete`;
    const response = await client.clientFetch(url, {
        record: {},
    });
    return response;
}
exports.deleteTelegramIntegration = deleteTelegramIntegration;
async function setupTelegramIntegration(client, telegramId) {
    const url = `/api/v1/integration/telegram/${telegramId}/setup`;
    const response = await client.clientFetch(url, {
        record: {},
    });
    return response;
}
exports.setupTelegramIntegration = setupTelegramIntegration;
