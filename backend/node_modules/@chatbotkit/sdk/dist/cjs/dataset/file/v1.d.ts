export function listDatasetFiles(client: ChatBotKitClient, datasetId: string, request?: DatasetFileListRequest): ResponsePromise<DatasetFileListResponse, DatasetFileListStreamType>;
export function attachDatasetFile(client: ChatBotKitClient, datasetId: string, fileId: string, request: DatasetFileAttachRequest): Promise<DatasetFileAttachResponse>;
export function detachDatasetFile(client: ChatBotKitClient, datasetId: string, fileId: string, request: DatasetFileDetachRequest): Promise<DatasetFileDetachResponse>;
export function syncDatasetFile(client: ChatBotKitClient, datasetId: string, fileId: string, request: DatasetFileSyncRequest): Promise<DatasetFileSyncResponse>;
export type ChatBotKitClient = import('../../client.cjs').ChatBotKitClient;
export type ResponsePromise<T, U> = import('../../client.cjs').ResponsePromise<T, U>;
export type DatasetFileInstance = import('../../file/v1.cjs').FileInstance;
export type DatasetFileListRequest = {
    cursor?: string;
    order?: 'desc' | 'asc';
    take?: number;
    meta?: Record<string, string>;
};
export type DatasetFileListResponse = {
    items: DatasetFileInstance[];
};
export type DatasetFileListStreamItemType = {
    type: 'item';
    data: DatasetFileInstance;
};
export type DatasetFileListStreamType = DatasetFileListStreamItemType;
export type DatasetFileAttachRequest = {
    type: 'source';
};
export type DatasetFileAttachResponse = {
    id: string;
};
export type DatasetFileDetachRequest = {};
export type DatasetFileDetachResponse = {
    id: string;
};
export type DatasetFileSyncRequest = {};
export type DatasetFileSyncResponse = {
    id: string;
};
