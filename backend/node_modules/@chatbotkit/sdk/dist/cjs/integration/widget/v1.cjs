"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deleteWidgetIntegration = exports.updateWidgetIntegration = exports.createWidgetIntegration = exports.fetchWidgetIntegration = exports.listWidgetIntegrations = void 0;
function listWidgetIntegrations(client, request) {
    let url = `/api/v1/integration/widget/list`;
    const response = client.clientFetch(url, { query: request });
    return response;
}
exports.listWidgetIntegrations = listWidgetIntegrations;
async function fetchWidgetIntegration(client, widgetId) {
    const url = `/api/v1/integration/widget/${widgetId}/fetch`;
    const response = await client.clientFetch(url);
    return response;
}
exports.fetchWidgetIntegration = fetchWidgetIntegration;
async function createWidgetIntegration(client, request) {
    const url = `/api/v1/integration/widget/create`;
    const response = await client.clientFetch(url, {
        record: {
            ...request,
        },
    });
    return response;
}
exports.createWidgetIntegration = createWidgetIntegration;
async function updateWidgetIntegration(client, widgetId, request) {
    const url = `/api/v1/integration/widget/${widgetId}/update`;
    const response = await client.clientFetch(url, {
        record: {
            ...request,
        },
    });
    return response;
}
exports.updateWidgetIntegration = updateWidgetIntegration;
async function deleteWidgetIntegration(client, widgetId) {
    const url = `/api/v1/integration/widget/${widgetId}/delete`;
    const response = await client.clientFetch(url, {
        record: {},
    });
    return response;
}
exports.deleteWidgetIntegration = deleteWidgetIntegration;
