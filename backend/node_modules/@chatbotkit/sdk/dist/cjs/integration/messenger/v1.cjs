"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setupMessengerIntegration = exports.deleteMessengerIntegration = exports.updateMessengerIntegration = exports.createMessengerIntegration = exports.fetchMessengerIntegration = exports.listMessengerIntegrations = void 0;
const v1_js_1 = require("../../model/v1.cjs");
function listMessengerIntegrations(client, request) {
    let url = `/api/v1/integration/messenger/list`;
    const response = client.clientFetch(url, { query: request });
    return response;
}
exports.listMessengerIntegrations = listMessengerIntegrations;
async function fetchMessengerIntegration(client, messengerId) {
    const url = `/api/v1/integration/messenger/${messengerId}/fetch`;
    const response = await client.clientFetch(url);
    return response;
}
exports.fetchMessengerIntegration = fetchMessengerIntegration;
async function createMessengerIntegration(client, request) {
    const url = `/api/v1/integration/messenger/create`;
    const response = await client.clientFetch(url, {
        record: {
            ...request,
            model: request.model ? (0, v1_js_1.buildModelString)(request.model) : undefined,
        },
    });
    return response;
}
exports.createMessengerIntegration = createMessengerIntegration;
async function updateMessengerIntegration(client, messengerId, request) {
    const url = `/api/v1/integration/messenger/${messengerId}/update`;
    const response = await client.clientFetch(url, {
        record: {
            ...request,
            model: request.model ? (0, v1_js_1.buildModelString)(request.model) : undefined,
        },
    });
    return response;
}
exports.updateMessengerIntegration = updateMessengerIntegration;
async function deleteMessengerIntegration(client, messengerId) {
    const url = `/api/v1/integration/messenger/${messengerId}/delete`;
    const response = await client.clientFetch(url, {
        record: {},
    });
    return response;
}
exports.deleteMessengerIntegration = deleteMessengerIntegration;
async function setupMessengerIntegration(client, messengerId) {
    const url = `/api/v1/integration/messenger/${messengerId}/setup`;
    const response = await client.clientFetch(url, {
        record: {},
    });
    return response;
}
exports.setupMessengerIntegration = setupMessengerIntegration;
