export class MessengerIntegrationClient extends ChatBotKitClient {
    list(request?: import("./v1.js").MessengerIntegrationListRequest | undefined): ResponsePromise<import('./v1.js').MessengerIntegrationListResponse, import('./v1.js').MessengerIntegrationListStreamType>;
    fetch(messengerId: string): Promise<import('./v1.js').MessengerIntegrationFetchResponse>;
    create(request: import('./v1.js').MessengerIntegrationCreateRequest): Promise<import('./v1.js').MessengerIntegrationCreateResponse>;
    update(messengerId: string, request: import('./v1.js').MessengerIntegrationUpdateRequest): Promise<import('./v1.js').MessengerIntegrationUpdateResponse>;
    delete(messengerId: string): Promise<import('./v1.js').MessengerIntegrationDeleteResponse>;
    setup(messengerId: string): Promise<import('./v1.js').MessengerIntegrationSetupResponse>;
}
export default MessengerIntegrationClient;
export type ResponsePromise<T, U> = import('../../client.js').ResponsePromise<T, U>;
import { ChatBotKitClient } from '../../client.js';
