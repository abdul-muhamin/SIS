export function listSupportIntegrations(client: ChatBotKitClient, request?: SupportIntegrationListRequest): ResponsePromise<SupportIntegrationListResponse, SupportIntegrationListStreamType>;
export function fetchSupportIntegration(client: ChatBotKitClient, supportId: string): Promise<SupportIntegrationFetchResponse>;
export function createSupportIntegration(client: ChatBotKitClient, request: SupportIntegrationCreateRequest): Promise<SupportIntegrationCreateResponse>;
export function updateSupportIntegration(client: ChatBotKitClient, supportId: string, request: SupportIntegrationUpdateRequest): Promise<SupportIntegrationUpdateResponse>;
export function deleteSupportIntegration(client: ChatBotKitClient, supportId: string): Promise<SupportIntegrationDeleteResponse>;
export type ChatBotKitClient = import('../../client.cjs').ChatBotKitClient;
export type ResponsePromise<T, U> = import('../../client.cjs').ResponsePromise<T, U>;
export type SupportIntegrationOptions = {
    name?: string;
    description?: string;
    botId?: string;
    email?: string;
    syncSchedule?: string;
    expiresIn?: number;
    meta?: Record<string, any>;
};
export type SupportInegrationInstance = SupportIntegrationOptions & {
    id: string;
    createdAt: number;
    updatedAt: number;
};
export type SupportIntegrationListRequest = {
    cursor?: string;
    order?: 'desc' | 'asc';
    take?: number;
    meta?: Record<string, string>;
};
export type SupportIntegrationListResponse = {
    items: SupportInegrationInstance[];
};
export type SupportIntegrationListStreamItem = {
    type: 'item';
    data: SupportInegrationInstance;
};
export type SupportIntegrationListStreamType = SupportIntegrationListStreamItem;
export type SupportIntegrationFetchResponse = SupportInegrationInstance & {};
export type SupportIntegrationCreateRequest = SupportIntegrationOptions & {
    botId: string;
};
export type SupportIntegrationCreateResponse = {
    id: string;
};
export type SupportIntegrationUpdateRequest = SupportIntegrationOptions & {};
export type SupportIntegrationUpdateResponse = {
    id: string;
};
export type SupportIntegrationDeleteResponse = {
    id: string;
};
