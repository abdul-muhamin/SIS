import { buildModelString } from '../../model/v1.js';
export function listMessengerIntegrations(client, request) {
    let url = `/api/v1/integration/messenger/list`;
    const response = client.clientFetch(url, { query: request });
    return response;
}
export async function fetchMessengerIntegration(client, messengerId) {
    const url = `/api/v1/integration/messenger/${messengerId}/fetch`;
    const response = await client.clientFetch(url);
    return response;
}
export async function createMessengerIntegration(client, request) {
    const url = `/api/v1/integration/messenger/create`;
    const response = await client.clientFetch(url, {
        record: {
            ...request,
            model: request.model ? buildModelString(request.model) : undefined,
        },
    });
    return response;
}
export async function updateMessengerIntegration(client, messengerId, request) {
    const url = `/api/v1/integration/messenger/${messengerId}/update`;
    const response = await client.clientFetch(url, {
        record: {
            ...request,
            model: request.model ? buildModelString(request.model) : undefined,
        },
    });
    return response;
}
export async function deleteMessengerIntegration(client, messengerId) {
    const url = `/api/v1/integration/messenger/${messengerId}/delete`;
    const response = await client.clientFetch(url, {
        record: {},
    });
    return response;
}
export async function setupMessengerIntegration(client, messengerId) {
    const url = `/api/v1/integration/messenger/${messengerId}/setup`;
    const response = await client.clientFetch(url, {
        record: {},
    });
    return response;
}
