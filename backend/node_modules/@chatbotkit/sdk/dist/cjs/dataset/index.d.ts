export class DatasetClient extends ChatBotKitClient {
    file: DatasetFileClient;
    record: DatasetRecordClient;
    list(request?: import('./v1.cjs').DatasetListRequest): ResponsePromise<import('./v1.cjs').DatasetListResponse, import('./v1.cjs').DatasetListStreamType>;
    fetch(datasetId: string): Promise<import('./v1.cjs').DatasetFetchResponse>;
    create(request: import('./v1.cjs').DatasetCreateRequest): Promise<import('./v1.cjs').DatasetCreateResponse>;
    update(datasetId: string, request: import('./v1.cjs').DatasetUpdateRequest): Promise<import('./v1.cjs').DatasetUpdateResponse>;
    delete(datasetId: string): Promise<import('./v1.cjs').DatasetDeleteResponse>;
    search(datasetId: string, search: string): Promise<import('./v1.cjs').DatasetSearchResponse>;
}
export default DatasetClient;
export type ResponsePromise<T, U> = import('../client.cjs').ResponsePromise<T, U>;
import { ChatBotKitClient } from '../client.cjs';
import { DatasetFileClient } from './file/index.cjs';
import { DatasetRecordClient } from './record/index.cjs';
