export class FileClient extends ChatBotKitClient {
    list(request?: import("./v1.js").FileListRequest | undefined): ResponsePromise<import('./v1.js').FileListResponse, import('./v1.js').FileListStreamType>;
    fetch(fileId: string): Promise<import('./v1.js').FileFetchResponse>;
    create(request: import('./v1.js').FileCreateRequest): Promise<import('./v1.js').FileCreateResponse>;
    update(fileId: string, request: import('./v1.js').FileUpdateRequest): Promise<import('./v1.js').FileUpdateResponse>;
    delete(fileId: string): Promise<import('./v1.js').FileDeleteResponse>;
    upload(fileId: string, request: import('./v1.js').FileUploadRequest): Promise<import('./v1.js').FileUploadResponse>;
    download(fileId: string): Promise<import('./v1.js').FileDownloadResponse>;
}
export default FileClient;
export type ResponsePromise<T, U> = import('../client.js').ResponsePromise<T, U>;
import { ChatBotKitClient } from '../client.js';
