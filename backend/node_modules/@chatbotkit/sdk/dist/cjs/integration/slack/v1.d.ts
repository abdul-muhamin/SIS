export function listSlackIntegrations(client: ChatBotKitClient, request?: SlackIntegrationListRequest): ResponsePromise<SlackIntegrationListResponse, SlackIntegrationListStreamType>;
export function fetchSlackIntegration(client: ChatBotKitClient, slackId: string): Promise<SlackIntegrationFetchResponse>;
export function createSlackIntegration(client: ChatBotKitClient, request: SlackIntegrationCreateRequest): Promise<SlackIntegrationCreateResponse>;
export function updateSlackIntegration(client: ChatBotKitClient, slackId: string, request: SlackIntegrationUpdateRequest): Promise<SlackIntegrationUpdateResponse>;
export function deleteSlackIntegration(client: ChatBotKitClient, slackId: string): Promise<SlackIntegrationDeleteResponse>;
export function setupSlackIntegration(client: ChatBotKitClient, slackId: string): Promise<SlackIntegrationSetupResponse>;
export type ChatBotKitClient = import('../../client.cjs').ChatBotKitClient;
export type ResponsePromise<T, U> = import('../../client.cjs').ResponsePromise<T, U>;
export type BotRef = {
    botId?: string;
};
export type BotConfig = {
    backstory?: string;
    model?: string;
    datasetId?: string;
    skillsetId?: string;
    privacy?: boolean;
    moderation?: boolean;
};
export type BotRefOrConfig = BotRef | BotConfig;
export type SlackIntegrationOptions = BotRefOrConfig & {
    name?: string;
    description?: string;
    signingSecret?: string;
    botToken?: string;
    visibleMessages?: number;
    sessionDuration?: number;
    meta?: Record<string, any>;
};
export type SlackIntegrationInstance = SlackIntegrationOptions & {
    id: string;
    createdAt: number;
    updatedAt: number;
};
export type SlackIntegrationListRequest = {
    cursor?: string;
    order?: 'desc' | 'asc';
    take?: number;
    meta?: Record<string, string>;
};
export type SlackIntegrationListResponse = {
    items: SlackIntegrationInstance[];
};
export type SlackIntegrationListStreamItem = {
    type: 'item';
    data: SlackIntegrationInstance;
};
export type SlackIntegrationListStreamType = SlackIntegrationListStreamItem;
export type SlackIntegrationFetchResponse = SlackIntegrationInstance & {};
export type SlackIntegrationCreateRequest = SlackIntegrationOptions & {
    model?: import('../../model/v1.cjs').Model;
};
export type SlackIntegrationCreateResponse = {
    id: string;
};
export type SlackIntegrationUpdateRequest = SlackIntegrationOptions & {
    model?: import('../../model/v1.cjs').Model;
};
export type SlackIntegrationUpdateResponse = {
    id: string;
};
export type SlackIntegrationDeleteResponse = {
    id: string;
};
export type SlackIntegrationSetupResponse = {
    id: string;
};
