export function listMessengerIntegrations(client: ChatBotKitClient, request?: MessengerIntegrationListRequest): ResponsePromise<MessengerIntegrationListResponse, MessengerIntegrationListStreamType>;
export function fetchMessengerIntegration(client: ChatBotKitClient, messengerId: string): Promise<MessengerIntegrationFetchResponse>;
export function createMessengerIntegration(client: ChatBotKitClient, request: MessengerIntegrationCreateRequest): Promise<MessengerIntegrationCreateResponse>;
export function updateMessengerIntegration(client: ChatBotKitClient, messengerId: string, request: MessengerIntegrationUpdateRequest): Promise<MessengerIntegrationUpdateResponse>;
export function deleteMessengerIntegration(client: ChatBotKitClient, messengerId: string): Promise<MessengerIntegrationDeleteResponse>;
export function setupMessengerIntegration(client: ChatBotKitClient, messengerId: string): Promise<MessengerIntegrationSetupResponse>;
export type ChatBotKitClient = import('../../client.cjs').ChatBotKitClient;
export type ResponsePromise<T, U> = import('../../client.cjs').ResponsePromise<T, U>;
export type BotRef = {
    botId?: string;
};
export type BotConfig = {
    backstory?: string;
    model?: string;
    datasetId?: string;
    skillsetId?: string;
    privacy?: boolean;
    moderation?: boolean;
};
export type BotRefOrConfig = BotRef | BotConfig;
export type MessengerIntegrationOptions = BotRefOrConfig & {
    name?: string;
    description?: string;
    accessToken?: string;
    sessionDuration?: number;
    attachments?: boolean;
    meta?: Record<string, any>;
};
export type MessengerIntegrationInstance = MessengerIntegrationOptions & {
    id: string;
    createdAt: number;
    updatedAt: number;
    verifyToken: string;
};
export type MessengerIntegrationListRequest = {
    cursor?: string;
    order?: 'desc' | 'asc';
    take?: number;
    meta?: Record<string, string>;
};
export type MessengerIntegrationListResponse = {
    items: MessengerIntegrationInstance[];
};
export type MessengerIntegrationListStreamItem = {
    type: 'item';
    data: MessengerIntegrationInstance;
};
export type MessengerIntegrationListStreamType = MessengerIntegrationListStreamItem;
export type MessengerIntegrationFetchResponse = MessengerIntegrationInstance & {};
export type MessengerIntegrationCreateRequest = MessengerIntegrationOptions & {
    model?: import('../../model/v1.cjs').Model;
};
export type MessengerIntegrationCreateResponse = {
    id: string;
};
export type MessengerIntegrationUpdateRequest = MessengerIntegrationOptions & {
    model?: import('../../model/v1.cjs').Model;
};
export type MessengerIntegrationUpdateResponse = {
    id: string;
};
export type MessengerIntegrationDeleteResponse = {
    id: string;
};
export type MessengerIntegrationSetupResponse = {
    id: string;
};
