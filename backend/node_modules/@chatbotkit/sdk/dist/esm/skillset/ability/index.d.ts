export class SkillsetAbilityClient extends ChatBotKitClient {
    list(skillsetId: string, request?: import("./v1.js").SkillsetAbilityListRequest | undefined): ResponsePromise<import('./v1.js').SkillsetAbilityListResponse, import('./v1.js').SkillsetAbilityListStreamType>;
    fetch(skillsetId: string, abilityId: string): Promise<import('./v1.js').SkillsetAbilityFetchResponse>;
    create(skillsetId: string, request: import('./v1.js').SkillsetAbilityCreateRequest): Promise<import('./v1.js').SkillsetAbilityCreateResponse>;
    update(skillsetId: string, abilityId: string, request: import('./v1.js').SkillsetAbilityUpdateRequest): Promise<import('./v1.js').SkillsetAbilityUpdateResponse>;
    delete(skillsetId: string, abilityId: string): Promise<import('./v1.js').SkillsetAbilityDeleteResponse>;
}
export default SkillsetAbilityClient;
export type ResponsePromise<T, U> = import('../../client.js').ResponsePromise<T, U>;
import { ChatBotKitClient } from '../../client.js';
