"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.syncNotionIntegration = exports.deleteNotionIntegration = exports.updateNotionIntegration = exports.createNotionIntegration = exports.fetchNotionIntegration = exports.listNotionIntegrations = void 0;
function listNotionIntegrations(client, request) {
    let url = `/api/v1/integration/notion/list`;
    const response = client.clientFetch(url, { query: request });
    return response;
}
exports.listNotionIntegrations = listNotionIntegrations;
async function fetchNotionIntegration(client, notionId) {
    const url = `/api/v1/integration/notion/${notionId}/fetch`;
    const response = await client.clientFetch(url);
    return response;
}
exports.fetchNotionIntegration = fetchNotionIntegration;
async function createNotionIntegration(client, request) {
    const url = `/api/v1/integration/notion/create`;
    const response = await client.clientFetch(url, {
        record: {
            ...request,
        },
    });
    return response;
}
exports.createNotionIntegration = createNotionIntegration;
async function updateNotionIntegration(client, notionId, request) {
    const url = `/api/v1/integration/notion/${notionId}/update`;
    const response = await client.clientFetch(url, {
        record: {
            ...request,
        },
    });
    return response;
}
exports.updateNotionIntegration = updateNotionIntegration;
async function deleteNotionIntegration(client, notionId) {
    const url = `/api/v1/integration/notion/${notionId}/delete`;
    const response = await client.clientFetch(url, {
        record: {},
    });
    return response;
}
exports.deleteNotionIntegration = deleteNotionIntegration;
async function syncNotionIntegration(client, notionId) {
    const url = `/api/v1/integration/notion/${notionId}/sync`;
    const response = await client.clientFetch(url, {
        record: {},
    });
    return response;
}
exports.syncNotionIntegration = syncNotionIntegration;
