export function listSitemapIntegrations(client: ChatBotKitClient, request?: SitemapIntegrationListRequest | undefined): ResponsePromise<SitemapIntegrationListResponse, SitemapIntegrationListStreamType>;
export function fetchSitemapIntegration(client: ChatBotKitClient, sitemapId: string): Promise<SitemapIntegrationFetchResponse>;
export function createSitemapIntegration(client: ChatBotKitClient, request: SitemapIntegrationCreateRequest): Promise<SitemapIntegrationCreateResponse>;
export function updateSitemapIntegration(client: ChatBotKitClient, sitemapId: string, request: SitemapIntegrationUpdateRequest): Promise<SitemapIntegrationUpdateResponse>;
export function deleteSitemapIntegration(client: ChatBotKitClient, sitemapId: string): Promise<SitemapIntegrationDeleteResponse>;
export function syncSitemapIntegration(client: ChatBotKitClient, sitemapId: string): Promise<SitemapIntegrationSyncResponse>;
export type ChatBotKitClient = import('../../client.js').ChatBotKitClient;
export type ResponsePromise<T, U> = import('../../client.js').ResponsePromise<T, U>;
export type SitemapIntegrationOptions = {
    name?: string;
    description?: string;
    datasetId?: string;
    url?: string;
    glob?: string;
    selectors?: string;
    javascript?: boolean;
    syncSchedule?: string;
    expiresIn?: number;
    meta?: Record<string, any>;
};
export type SitemapInegrationInstance = SitemapIntegrationOptions & {
    id: string;
    createdAt: number;
    updatedAt: number;
};
export type SitemapIntegrationListRequest = {
    cursor?: string;
    order?: 'desc' | 'asc';
    take?: number;
    meta?: Record<string, string>;
};
export type SitemapIntegrationListResponse = {
    items: SitemapInegrationInstance[];
};
export type SitemapIntegrationListStreamItem = {
    type: 'item';
    data: SitemapInegrationInstance;
};
export type SitemapIntegrationListStreamType = SitemapIntegrationListStreamItem;
export type SitemapIntegrationFetchResponse = SitemapInegrationInstance & {};
export type SitemapIntegrationCreateRequest = SitemapIntegrationOptions & {
    datasetId: string;
};
export type SitemapIntegrationCreateResponse = {
    id: string;
};
export type SitemapIntegrationUpdateRequest = SitemapIntegrationOptions & {};
export type SitemapIntegrationUpdateResponse = {
    id: string;
};
export type SitemapIntegrationDeleteResponse = {
    id: string;
};
export type SitemapIntegrationSyncResponse = {
    id: string;
};
