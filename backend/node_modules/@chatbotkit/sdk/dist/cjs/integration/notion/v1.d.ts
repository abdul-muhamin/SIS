export function listNotionIntegrations(client: ChatBotKitClient, request?: NotionIntegrationListRequest): ResponsePromise<NotionIntegrationListResponse, NotionIntegrationListStreamType>;
export function fetchNotionIntegration(client: ChatBotKitClient, notionId: string): Promise<NotionIntegrationFetchResponse>;
export function createNotionIntegration(client: ChatBotKitClient, request: NotionIntegrationCreateRequest): Promise<NotionIntegrationCreateResponse>;
export function updateNotionIntegration(client: ChatBotKitClient, notionId: string, request: NotionIntegrationUpdateRequest): Promise<NotionIntegrationUpdateResponse>;
export function deleteNotionIntegration(client: ChatBotKitClient, notionId: string): Promise<NotionIntegrationDeleteResponse>;
export function syncNotionIntegration(client: ChatBotKitClient, notionId: string): Promise<NotionIntegrationSyncResponse>;
export type ChatBotKitClient = import('../../client.cjs').ChatBotKitClient;
export type ResponsePromise<T, U> = import('../../client.cjs').ResponsePromise<T, U>;
export type NotionIntegrationOptions = {
    name?: string;
    description?: string;
    datasetId?: string;
    token?: string;
    syncSchedule?: string;
    expiresIn?: number;
    meta?: Record<string, any>;
};
export type NotionInegrationInstance = NotionIntegrationOptions & {
    id: string;
    createdAt: number;
    updatedAt: number;
};
export type NotionIntegrationListRequest = {
    cursor?: string;
    order?: 'desc' | 'asc';
    take?: number;
    meta?: Record<string, string>;
};
export type NotionIntegrationListResponse = {
    items: NotionInegrationInstance[];
};
export type NotionIntegrationListStreamItem = {
    type: 'item';
    data: NotionInegrationInstance;
};
export type NotionIntegrationListStreamType = NotionIntegrationListStreamItem;
export type NotionIntegrationFetchResponse = NotionInegrationInstance & {};
export type NotionIntegrationCreateRequest = NotionIntegrationOptions & {
    datasetId: string;
};
export type NotionIntegrationCreateResponse = {
    id: string;
};
export type NotionIntegrationUpdateRequest = NotionIntegrationOptions & {};
export type NotionIntegrationUpdateResponse = {
    id: string;
};
export type NotionIntegrationDeleteResponse = {
    id: string;
};
export type NotionIntegrationSyncResponse = {
    id: string;
};
