export function listConversationMessages(client, conversationId, request) {
    let url = `/api/v1/conversation/${conversationId}/message/list`;
    const response = client.clientFetch(url, { query: request });
    return response;
}
export async function fetchConversationMessage(client, conversationId, messageId) {
    const url = `/api/v1/conversation/${conversationId}/message/${messageId}/fetch`;
    const response = await client.clientFetch(url);
    return response;
}
export async function createConversationMessage(client, conversationId, request) {
    const url = `/api/v1/conversation/${conversationId}/message/create`;
    const response = await client.clientFetch(url, {
        record: {
            ...request,
        },
    });
    return response;
}
export async function updateConversationMessage(client, conversationId, messageId, request) {
    const url = `/api/v1/conversation/${conversationId}/message/${messageId}/update`;
    const response = await client.clientFetch(url, {
        record: {
            ...request,
        },
    });
    return response;
}
export async function deleteConversationMessage(client, conversationId, messageId) {
    const url = `/api/v1/conversation/${conversationId}/message/${messageId}/delete`;
    const response = await client.clientFetch(url, {
        record: {},
    });
    return response;
}
export async function upvoteConversationMessage(client, conversationId, messageId, request) {
    const url = `/api/v1/conversation/${conversationId}/message/${messageId}/upvote`;
    const response = await client.clientFetch(url, {
        record: {
            value: 100,
            ...request,
        },
    });
    return response;
}
export async function downvoteConversationMessage(client, conversationId, messageId, request) {
    const url = `/api/v1/conversation/${conversationId}/message/${messageId}/downvote`;
    const response = await client.clientFetch(url, {
        record: {
            value: -100,
            ...request,
        },
    });
    return response;
}
