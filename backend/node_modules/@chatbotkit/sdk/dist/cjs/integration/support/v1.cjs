"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deleteSupportIntegration = exports.updateSupportIntegration = exports.createSupportIntegration = exports.fetchSupportIntegration = exports.listSupportIntegrations = void 0;
function listSupportIntegrations(client, request) {
    let url = `/api/v1/integration/support/list`;
    const response = client.clientFetch(url, { query: request });
    return response;
}
exports.listSupportIntegrations = listSupportIntegrations;
async function fetchSupportIntegration(client, supportId) {
    const url = `/api/v1/integration/support/${supportId}/fetch`;
    const response = await client.clientFetch(url);
    return response;
}
exports.fetchSupportIntegration = fetchSupportIntegration;
async function createSupportIntegration(client, request) {
    const url = `/api/v1/integration/support/create`;
    const response = await client.clientFetch(url, {
        record: {
            ...request,
        },
    });
    return response;
}
exports.createSupportIntegration = createSupportIntegration;
async function updateSupportIntegration(client, supportId, request) {
    const url = `/api/v1/integration/support/${supportId}/update`;
    const response = await client.clientFetch(url, {
        record: {
            ...request,
        },
    });
    return response;
}
exports.updateSupportIntegration = updateSupportIntegration;
async function deleteSupportIntegration(client, supportId) {
    const url = `/api/v1/integration/support/${supportId}/delete`;
    const response = await client.clientFetch(url, {
        record: {},
    });
    return response;
}
exports.deleteSupportIntegration = deleteSupportIntegration;
