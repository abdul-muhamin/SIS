import { buildModelString } from '../../model/v1.js';
export function listDiscordIntegrations(client, request) {
    let url = `/api/v1/integration/discord/list`;
    const response = client.clientFetch(url, { query: request });
    return response;
}
export async function fetchDiscordIntegration(client, discordId) {
    const url = `/api/v1/integration/discord/${discordId}/fetch`;
    const response = await client.clientFetch(url);
    return response;
}
export async function createDiscordIntegration(client, request) {
    const url = `/api/v1/integration/discord/create`;
    const response = await client.clientFetch(url, {
        record: {
            ...request,
            model: request.model ? buildModelString(request.model) : undefined,
        },
    });
    return response;
}
export async function updateDiscordIntegration(client, discordId, request) {
    const url = `/api/v1/integration/discord/${discordId}/update`;
    const response = await client.clientFetch(url, {
        record: {
            ...request,
            model: request.model ? buildModelString(request.model) : undefined,
        },
    });
    return response;
}
export async function deleteDiscordIntegration(client, discordId) {
    const url = `/api/v1/integration/discord/${discordId}/delete`;
    const response = await client.clientFetch(url, {
        record: {},
    });
    return response;
}
export async function setupDiscordIntegration(client, discordId) {
    const url = `/api/v1/integration/discord/${discordId}/setup`;
    const response = await client.clientFetch(url, {
        record: {},
    });
    return response;
}
