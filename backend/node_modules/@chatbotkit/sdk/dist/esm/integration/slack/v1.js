import { buildModelString } from '../../model/v1.js';
export function listSlackIntegrations(client, request) {
    let url = `/api/v1/integration/slack/list`;
    const response = client.clientFetch(url, { query: request });
    return response;
}
export async function fetchSlackIntegration(client, slackId) {
    const url = `/api/v1/integration/slack/${slackId}/fetch`;
    const response = await client.clientFetch(url);
    return response;
}
export async function createSlackIntegration(client, request) {
    const url = `/api/v1/integration/slack/create`;
    const response = await client.clientFetch(url, {
        record: {
            ...request,
            model: request.model ? buildModelString(request.model) : undefined,
        },
    });
    return response;
}
export async function updateSlackIntegration(client, slackId, request) {
    const url = `/api/v1/integration/slack/${slackId}/update`;
    const response = await client.clientFetch(url, {
        record: {
            ...request,
            model: request.model ? buildModelString(request.model) : undefined,
        },
    });
    return response;
}
export async function deleteSlackIntegration(client, slackId) {
    const url = `/api/v1/integration/slack/${slackId}/delete`;
    const response = await client.clientFetch(url, {
        record: {},
    });
    return response;
}
export async function setupSlackIntegration(client, slackId) {
    const url = `/api/v1/integration/slack/${slackId}/setup`;
    const response = await client.clientFetch(url, {
        record: {},
    });
    return response;
}
