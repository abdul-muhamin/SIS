export class BotClient extends ChatBotKitClient {
    session: BotSessionClient;
    list(request?: import("./v1.js").BotListRequest | undefined): ResponsePromise<import('./v1.js').BotListResponse, import('./v1.js').BotListStreamType>;
    fetch(botId: string): Promise<import('./v1.js').BotFetchResponse>;
    create(request: import('./v1.js').BotCreateRequest): Promise<import('./v1.js').BotCreateResponse>;
    update(botId: string, request: import('./v1.js').BotUpdateRequest): Promise<import('./v1.js').BotUpdateResponse>;
    delete(botId: string): Promise<import('./v1.js').BotDeleteResponse>;
    upvote(botId: string, request: import('./v1.js').BotUpvoteRequest): Promise<import('./v1.js').BotUpvoteResponse>;
    downvote(botId: string, request: import('./v1.js').BotDownvoteRequest): Promise<import('./v1.js').BotDownvoteResponse>;
}
export default BotClient;
export type ResponsePromise<T, U> = import('../client.js').ResponsePromise<T, U>;
import { ChatBotKitClient } from '../client.js';
import { BotSessionClient } from './session/index.js';
