export class BotClient extends ChatBotKitClient {
    session: BotSessionClient;
    list(request?: import('./v1.cjs').BotListRequest): ResponsePromise<import('./v1.cjs').BotListResponse, import('./v1.cjs').BotListStreamType>;
    fetch(botId: string): Promise<import('./v1.cjs').BotFetchResponse>;
    create(request: import('./v1.cjs').BotCreateRequest): Promise<import('./v1.cjs').BotCreateResponse>;
    update(botId: string, request: import('./v1.cjs').BotUpdateRequest): Promise<import('./v1.cjs').BotUpdateResponse>;
    delete(botId: string): Promise<import('./v1.cjs').BotDeleteResponse>;
    upvote(botId: string, request: import('./v1.cjs').BotUpvoteRequest): Promise<import('./v1.cjs').BotUpvoteResponse>;
    downvote(botId: string, request: import('./v1.cjs').BotDownvoteRequest): Promise<import('./v1.cjs').BotDownvoteResponse>;
}
export default BotClient;
export type ResponsePromise<T, U> = import('../client.cjs').ResponsePromise<T, U>;
import { ChatBotKitClient } from '../client.cjs';
import { BotSessionClient } from './session/index.cjs';
