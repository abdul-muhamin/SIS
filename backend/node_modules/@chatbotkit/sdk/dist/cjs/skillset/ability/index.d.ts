export class SkillsetAbilityClient extends ChatBotKitClient {
    list(skillsetId: string, request?: import('./v1.cjs').SkillsetAbilityListRequest): ResponsePromise<import('./v1.cjs').SkillsetAbilityListResponse, import('./v1.cjs').SkillsetAbilityListStreamType>;
    fetch(skillsetId: string, abilityId: string): Promise<import('./v1.cjs').SkillsetAbilityFetchResponse>;
    create(skillsetId: string, request: import('./v1.cjs').SkillsetAbilityCreateRequest): Promise<import('./v1.cjs').SkillsetAbilityCreateResponse>;
    update(skillsetId: string, abilityId: string, request: import('./v1.cjs').SkillsetAbilityUpdateRequest): Promise<import('./v1.cjs').SkillsetAbilityUpdateResponse>;
    delete(skillsetId: string, abilityId: string): Promise<import('./v1.cjs').SkillsetAbilityDeleteResponse>;
}
export default SkillsetAbilityClient;
export type ResponsePromise<T, U> = import('../../client.cjs').ResponsePromise<T, U>;
import { ChatBotKitClient } from '../../client.cjs';
