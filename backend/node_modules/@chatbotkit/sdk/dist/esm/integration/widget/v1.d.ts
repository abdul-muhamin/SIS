export function listWidgetIntegrations(client: ChatBotKitClient, request?: WidgetIntegrationListRequest | undefined): ResponsePromise<WidgetIntegrationListResponse, WidgetIntegrationListStreamType>;
export function fetchWidgetIntegration(client: ChatBotKitClient, widgetId: string): Promise<WidgetIntegrationFetchResponse>;
export function createWidgetIntegration(client: ChatBotKitClient, request: WidgetIntegrationCreateRequest): Promise<WidgetIntegrationCreateResponse>;
export function updateWidgetIntegration(client: ChatBotKitClient, widgetId: string, request: WidgetIntegrationUpdateRequest): Promise<WidgetIntegrationUpdateResponse>;
export function deleteWidgetIntegration(client: ChatBotKitClient, widgetId: string): Promise<WidgetIntegrationDeleteResponse>;
export type ChatBotKitClient = import('../../client.js').ChatBotKitClient;
export type ResponsePromise<T, U> = import('../../client.js').ResponsePromise<T, U>;
export type WidgetIntegrationOptions = {
    name?: string;
    description?: string;
    theme?: string;
    layout?: string;
    title?: string;
    intro?: string;
    initial?: string;
    placeholder?: string;
    language?: string;
    origin?: string;
    stream?: boolean;
    verbose?: boolean;
    tools?: boolean;
    unfurl?: boolean;
    math?: boolean;
    attachments?: boolean;
    autoScroll?: boolean;
    startFirst?: boolean;
    contactCollection?: boolean;
    exportConversation?: boolean;
    restartConversation?: boolean;
    maxsimize?: boolean;
    messagePeek?: boolean;
    poweredBy?: boolean;
    sessionDuration?: number;
    meta?: Record<string, any>;
};
export type WidgetInegrationInstance = WidgetIntegrationOptions & {
    id: string;
    createdAt: number;
    updatedAt: number;
};
export type WidgetIntegrationListRequest = {
    cursor?: string;
    order?: 'desc' | 'asc';
    take?: number;
    meta?: Record<string, string>;
};
export type WidgetIntegrationListResponse = {
    items: WidgetInegrationInstance[];
};
export type WidgetIntegrationListStreamItem = {
    type: 'item';
    data: WidgetInegrationInstance;
};
export type WidgetIntegrationListStreamType = WidgetIntegrationListStreamItem;
export type WidgetIntegrationFetchResponse = WidgetInegrationInstance & {};
export type WidgetIntegrationCreateRequest = WidgetIntegrationOptions & {};
export type WidgetIntegrationCreateResponse = {
    id: string;
};
export type WidgetIntegrationUpdateRequest = WidgetIntegrationOptions & {};
export type WidgetIntegrationUpdateResponse = {
    id: string;
};
export type WidgetIntegrationDeleteResponse = {
    id: string;
};
