export class DatasetClient extends ChatBotKitClient {
    file: DatasetFileClient;
    record: DatasetRecordClient;
    list(request?: import("./v1.js").DatasetListRequest | undefined): ResponsePromise<import('./v1.js').DatasetListResponse, import('./v1.js').DatasetListStreamType>;
    fetch(datasetId: string): Promise<import('./v1.js').DatasetFetchResponse>;
    create(request: import('./v1.js').DatasetCreateRequest): Promise<import('./v1.js').DatasetCreateResponse>;
    update(datasetId: string, request: import('./v1.js').DatasetUpdateRequest): Promise<import('./v1.js').DatasetUpdateResponse>;
    delete(datasetId: string): Promise<import('./v1.js').DatasetDeleteResponse>;
    search(datasetId: string, search: string): Promise<import('./v1.js').DatasetSearchResponse>;
}
export default DatasetClient;
export type ResponsePromise<T, U> = import('../client.js').ResponsePromise<T, U>;
import { ChatBotKitClient } from '../client.js';
import { DatasetFileClient } from './file/index.js';
import { DatasetRecordClient } from './record/index.js';
