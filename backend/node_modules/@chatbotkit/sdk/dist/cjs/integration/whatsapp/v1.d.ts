export function listWhatsAppIntegrations(client: ChatBotKitClient, request?: WhatsAppIntegrationListRequest): ResponsePromise<WhatsAppIntegrationListResponse, WhatsAppIntegrationListStreamType>;
export function fetchWhatsAppIntegration(client: ChatBotKitClient, whatsappId: string): Promise<WhatsAppIntegrationFetchResponse>;
export function createWhatsAppIntegration(client: ChatBotKitClient, request: WhatsAppIntegrationCreateRequest): Promise<WhatsAppIntegrationCreateResponse>;
export function updateWhatsAppIntegration(client: ChatBotKitClient, whatsappId: string, request: WhatsAppIntegrationUpdateRequest): Promise<WhatsAppIntegrationUpdateResponse>;
export function deleteWhatsAppIntegration(client: ChatBotKitClient, whatsappId: string): Promise<WhatsAppIntegrationDeleteResponse>;
export function setupWhatsAppIntegration(client: ChatBotKitClient, whatsappId: string): Promise<WhatsAppIntegrationSetupResponse>;
export type ChatBotKitClient = import('../../client.cjs').ChatBotKitClient;
export type ResponsePromise<T, U> = import('../../client.cjs').ResponsePromise<T, U>;
export type BotRef = {
    botId?: string;
};
export type BotConfig = {
    backstory?: string;
    model?: string;
    datasetId?: string;
    skillsetId?: string;
    privacy?: boolean;
    moderation?: boolean;
};
export type BotRefOrConfig = BotRef | BotConfig;
export type WhatsAppIntegrationOptions = BotRefOrConfig & {
    name?: string;
    description?: string;
    phoneNumberId?: string;
    accessToken?: string;
    sessionDuration?: number;
    attachments?: boolean;
    meta?: Record<string, any>;
};
export type WhatsAppIntegrationInstance = WhatsAppIntegrationOptions & {
    id: string;
    createdAt: number;
    updatedAt: number;
    verifyToken: string;
};
export type WhatsAppIntegrationListRequest = {
    cursor?: string;
    order?: 'desc' | 'asc';
    take?: number;
    meta?: Record<string, string>;
};
export type WhatsAppIntegrationListResponse = {
    items: WhatsAppIntegrationInstance[];
};
export type WhatsAppIntegrationListStreamItem = {
    type: 'item';
    data: WhatsAppIntegrationInstance;
};
export type WhatsAppIntegrationListStreamType = WhatsAppIntegrationListStreamItem;
export type WhatsAppIntegrationFetchResponse = WhatsAppIntegrationInstance & {};
export type WhatsAppIntegrationCreateRequest = WhatsAppIntegrationOptions & {
    model?: import('../../model/v1.cjs').Model;
};
export type WhatsAppIntegrationCreateResponse = {
    id: string;
};
export type WhatsAppIntegrationUpdateRequest = WhatsAppIntegrationOptions & {
    model?: import('../../model/v1.cjs').Model;
};
export type WhatsAppIntegrationUpdateResponse = {
    id: string;
};
export type WhatsAppIntegrationDeleteResponse = {
    id: string;
};
export type WhatsAppIntegrationSetupResponse = {
    id: string;
};
