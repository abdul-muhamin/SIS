export function listFiles(client: ChatBotKitClient, request?: FileListRequest): ResponsePromise<FileListResponse, FileListStreamType>;
export function fetchFile(client: ChatBotKitClient, fileId: string): Promise<FileFetchResponse>;
export function createFile(client: ChatBotKitClient, request: FileCreateRequest): Promise<FileCreateResponse>;
export function updateFile(client: ChatBotKitClient, fileId: string, request: FileUpdateRequest): Promise<FileUpdateResponse>;
export function deleteFile(client: ChatBotKitClient, fileId: string): Promise<FileDeleteResponse>;
export function uploadFile(client: ChatBotKitClient, fileId: string, request: FileUploadRequest): Promise<FileUploadResponse>;
export function downloadFile(client: ChatBotKitClient, fileId: string): Promise<FileDownloadResponse>;
export type ChatBotKitClient = import('../client.cjs').ChatBotKitClient;
export type ResponsePromise<T, U> = import('../client.cjs').ResponsePromise<T, U>;
export type FileOptions = {
    name?: string;
    description?: string;
    meta?: Record<string, any>;
};
export type FileInstance = FileOptions & {
    id: string;
    createdAt: number;
    updatedAt: number;
};
export type FileListRequest = {
    cursor?: string;
    order?: 'desc' | 'asc';
    take?: number;
    meta?: Record<string, string>;
};
export type FileListResponse = {
    items: FileInstance[];
};
export type FileListStreamItemType = {
    type: 'item';
    data: FileInstance;
};
export type FileListStreamType = FileListStreamItemType;
export type FileFetchResponse = FileInstance & {};
export type FileCreateRequest = FileOptions & {};
export type FileCreateResponse = {
    id: string;
};
export type FileUpdateRequest = FileOptions & {};
export type FileUpdateResponse = {
    id: string;
};
export type FileDeleteResponse = {
    id: string;
};
export type FileUploadRequest = {
    data: string | ArrayBuffer;
    type: string;
    name?: string;
};
export type FileUploadResponse = {
    id: string;
};
export type FileDownloadResponse = {
    data: ArrayBuffer;
};
