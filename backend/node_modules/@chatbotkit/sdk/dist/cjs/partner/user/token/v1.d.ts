export function listPartnerUserTokens(client: ChatBotKitClient, userId: string, request?: PartnerUserTokenListRequest): ResponsePromise<PartnerUserTokenListResponse, PartnerUserTokenListStreamType>;
export function createPartnerUserToken(client: ChatBotKitClient, userId: string, request: PartnerUserTokenCreateRequest): Promise<PartnerUserTokenCreateResponse>;
export function deletePartnerUserToken(client: ChatBotKitClient, userId: string, tokenId: string): Promise<PartnerUserTokenDeleteResponse>;
export type ChatBotKitClient = import('../../../client.cjs').ChatBotKitClient;
export type ResponsePromise<T, U> = import('../../../client.cjs').ResponsePromise<T, U>;
export type PartnerUserTokenOptions = {};
export type PartnerUserTokenInstance = PartnerUserTokenOptions & {
    id: string;
    createdAt: number;
    updatedAt: number;
};
export type PartnerUserTokenListRequest = {
    cursor?: string;
    order?: 'desc' | 'asc';
    take?: number;
    meta?: Record<string, string>;
};
export type PartnerUserTokenListResponse = {
    items: PartnerUserTokenInstance[];
};
export type PartnerUserTokenListStreamItem = {
    type: 'item';
    data: PartnerUserTokenInstance;
};
export type PartnerUserTokenListStreamType = PartnerUserTokenListStreamItem;
export type PartnerUserTokenCreateRequest = PartnerUserTokenOptions & {};
export type PartnerUserTokenCreateResponse = {
    id: string;
    token: string;
    createdAt: number;
};
export type PartnerUserTokenDeleteResponse = {
    id: string;
};
